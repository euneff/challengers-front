{"ast":null,"code":"var _jsxFileName = \"C:\\\\Challengers-main\\\\src\\\\pages\\\\Review.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport yellowStar from \"../../assets/recreation/yellowStar.svg\";\nimport greyStar from \"../../assets/recreation/greyStar.svg\";\nimport ReviewStarstainer from '../components/ReviewStarstainer';\nimport StarsWrap from '../components/StarsWrap';\nimport StarNum from '../components/StarNum';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReviewStars() {\n  _s();\n  // 별점 기본값 설정\n  const [clicked, setClicked] = useState([false, false, false, false, false]);\n  // 별을 5개로 표현하기 위한 더미 배열 \n  const array = [0, 1, 2, 3, 4];\n\n  // 별점 변경 함수\n  const starScore = index => {\n    let star = [...clicked];\n    for (let i = 0; i < 5; i++) {\n      star[i] = i <= index ? true : false;\n    }\n    setClicked(star);\n  };\n\n  // 현재 선택한 별점 개수\n  let clickedStarNum = clicked.filter(element => true === element).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReviewStarstainer, {\n      children: /*#__PURE__*/_jsxDEV(StarsWrap, {\n        children: array.map(index => /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => starScore(index),\n          src: clicked[index] ? yellowStar : greyStar // clicked 배열이 true이면 yellowStar, false이면 greyStar을 출력\n          ,\n          alt: \"starIcon\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StarNum, {\n      children: [clickedStarNum, \"/5\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ReviewStars, \"4bHWtGsHKC+d18vry8sgFecjtBo=\");\n_c = ReviewStars;\nvar _c;\n$RefreshReg$(_c, \"ReviewStars\");","map":{"version":3,"names":["React","useState","yellowStar","greyStar","ReviewStarstainer","StarsWrap","StarNum","jsxDEV","_jsxDEV","Fragment","_Fragment","ReviewStars","_s","clicked","setClicked","array","starScore","index","star","i","clickedStarNum","filter","element","length","children","map","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Challengers-main/src/pages/Review.js"],"sourcesContent":["\r\nimport React, {useState} from \"react\";\r\nimport yellowStar from \"../../assets/recreation/yellowStar.svg\";\r\nimport greyStar from \"../../assets/recreation/greyStar.svg\";\r\nimport ReviewStarstainer from '../components/ReviewStarstainer';\r\nimport StarsWrap from '../components/StarsWrap';\r\nimport StarNum from '../components/StarNum';\r\n\r\nexport default function ReviewStars() {\r\n    // 별점 기본값 설정\r\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\r\n    // 별을 5개로 표현하기 위한 더미 배열 \r\n    const array = [0, 1, 2, 3, 4]\r\n    \r\n    // 별점 변경 함수\r\n    const starScore = index => {\r\n        let star = [...clicked];\r\n        for (let i = 0; i < 5; i++) {\r\n            star[i] = i <= index ? true : false;\r\n        }\r\n        setClicked(star);\r\n    };\r\n\r\n    // 현재 선택한 별점 개수\r\n    let clickedStarNum = clicked.filter(element => true === element).length; \r\n  \r\n    return (\r\n    <>\r\n    <ReviewStarstainer>\r\n        <StarsWrap>\r\n        {array.map((index) => (\r\n            <img\r\n              key={index}\r\n              onClick={() => starScore(index)}\r\n              src={clicked[index] ? yellowStar : greyStar} // clicked 배열이 true이면 yellowStar, false이면 greyStar을 출력\r\n              alt = \"starIcon\"\r\n            />))}\r\n    </StarsWrap>\r\n    </ReviewStarstainer>\r\n    <StarNum>{clickedStarNum}/5</StarNum>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAC3E;EACA,MAAMc,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAE7B;EACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;IACvB,IAAIC,IAAI,GAAG,CAAC,GAAGL,OAAO,CAAC;IACvB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxBD,IAAI,CAACC,CAAC,CAAC,GAAGA,CAAC,IAAIF,KAAK,GAAG,IAAI,GAAG,KAAK;IACvC;IACAH,UAAU,CAACI,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,IAAIE,cAAc,GAAGP,OAAO,CAACQ,MAAM,CAACC,OAAO,IAAI,IAAI,KAAKA,OAAO,CAAC,CAACC,MAAM;EAEvE,oBACAf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA,CAACJ,iBAAiB;MAAAoB,QAAA,eACdhB,OAAA,CAACH,SAAS;QAAAmB,QAAA,EACTT,KAAK,CAACU,GAAG,CAAER,KAAK,iBACbT,OAAA;UAEEkB,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAACC,KAAK,CAAE;UAChCU,GAAG,EAAEd,OAAO,CAACI,KAAK,CAAC,GAAGf,UAAU,GAAGC,QAAS,CAAC;UAAA;UAC7CyB,GAAG,EAAG;QAAU,GAHXX,KAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eACpBxB,OAAA,CAACF,OAAO;MAAAkB,QAAA,GAAEJ,cAAc,EAAC,IAAE;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA,eACnC,CAAC;AAEP;AAACpB,EAAA,CAlCuBD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}